<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define steps per second to be equal to room speed
global.stepsPerSecond = room_speed;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main menu config
//Initialize button pressed constant
global.buttonPressed = false; //Do not touch!

//Game name in title screen
global.gameTitle = "Penguin Platformer"; //Title of game - to be displayed on main menu
global.gameTitleY = room_height/5; //Y coordinates of center of title label, in pixels
global.gameTitleFont = fnt_title; //Font to be used for game title
global.gameTitleFontColor = c_white; //Font color to be used for game title

///Buttons
//Main menu button font
global.mainMenuButtonFont = fnt_menu_buttons; //Font to be used for main menu buttons
global.mainMenuButtonFontColor = c_white; //Font color to be used for main menu buttons

//Play button
global.mainMenuPlayButtonText = "Play!"; //Set text for play button
global.mainMenuPlayButtonX = room_width/2; //X coordinates of play button center, in pixels
global.mainMenuPlayButtonY = room_height/2; //Y coordinates of play button center, in pixels
//Dimensions
//Should be changed to be tight around the play button text
global.mainMenuPlayButtonWidth = 200;
global.mainMenuPlayButtonHeight = 100;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Level select menu config
//Number of levels
global.numberOfLevels = 20; //Total number of levels in the game
global.levelSelectColumns = 4; //Levels to display per row
global.levelSelectRows = 2; //Number of rows

//Size constants and locations
global.levelSelectChoiceWidth = 220; //Width of level select option boxes, in pixels
global.levelSelectChoiceHeight = 220; //Height of level select option boxes, in pixels
global.levelSelectSpacing = 40; //Spacing between level select option boxes, in pixels
global.levelSelectBoxBuffer = 40; //Spacing between outside level select option boxes and the borders of the box around them, in pixels
global.levelSelectBoxCornerRadiusProportion = 0.25; //Proportion of large box's smaller side length that the corner radius should be
global.levelSelectChoiceCornerRadiusProportion = 0.2; //Proportion of choice boxes' smaller side length that the corner radius should be
global.levelSelectBoxHeightOffset = 10; //Number of pixels to shift the level select box from the center of the screen (negative is up, positive is down)

//Page control buttons
global.levelSelectPageButtonOutlineColor = c_black; //Color of page control button outlines
global.levelSelectPageButtonWidth = 70; //Width of page control buttons, in pixels
global.levelSelectPageButtonHeight = 70; //Height of page control buttons, in pixels
global.levelSelectPageButtonSpacing = 30; //Spacing between page control buttons, in pixels
global.levelSelectPageButtonYSpacing = 30; //Number of pixels between bottom of large box and top of page control buttons
global.levelSelectPageButtonCornerRadiusProportion = 0.25; //Proportion of page buttons' smaller side length that the corner radius should be

//Title
global.levelSelectTitle = "Level Select"; //Title to be displayed on level select screen
global.levelSelectTitleY = 100; //Y coordinate of center of title, in pixels
global.levelSelectTitleFont = fnt_title; //Level select title font
global.levelSelectTitleFontColor = c_white; //Level select title font color

//Box colors
global.levelSelectBoxColor = c_white; //Color of box around level select choices
global.levelSelectChoiceColor = c_black; //Color of level select option boxes
global.levelSelectChoiceOutline = true; //Should the level select option box be just an outline (true) or completely filled (false)
global.levelSelectChoiceFont = fnt_level_select_buttons; //Font for options in level select menu
global.levelSelectChoiceFontColor = c_black; //Font color for options in level select menu

//Box marking
global.levelChoiceMarkHorizontalOffset = 5;
global.levelChoiceMarkVerticalOffset = 5;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Help objects config
//Help bubble image speed
global.helpBubbleImageSpeedDefault = 0.1;
//Hint button
global.hintButtonXOffset = 10;
global.hintButtonYOffset = 10;

///Hint dialogue box
//Background box
global.hintBoxHorizontalBuffer = 20;
global.hintBoxVerticalBuffer = 20;
global.hintBoxCornerRadiusProportion = 0.2;
global.hintBoxOutlineColor = c_black;
global.hintBoxFillColor = c_white;
//Text
global.hintBoxTitleTextBuffer = 100;
global.hintBoxTitleText = "Hint:";
global.hintTextTitleFont = fnt_hint_title;
global.hintTextTitleFontColor = c_black;
global.hintTextHorizontalBuffer = 30;
global.hintTextFont = fnt_hint_text;
global.hintTextFontColor = c_black;
global.hintTextLineSpacing = 70;
global.hintBottomTextBuffer = 60;
global.hintBottomTextFont = fnt_hint_bottom;
global.hintBottomTextFontColor = c_black;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set hint dialogue messages
global.hintBoxBottomText = "Press H to open/close this dialogue or click anywhere to close";
global.hintBoxText1 = "Use WASD or the arrow keys to move. Use S or the down arrow to enter doors.";
global.hintBoxText2 = "You need to collect all the fish in each level to progress.";
global.hintBoxText3 = "Stuck? Press R to reset the level."
global.hintBoxText4 = "You move faster on ice than on wood. This means you can jump farther.";
global.hintBoxText5 = "The speed bonus from ice isn't lost while midair or climbing ladders. Use this to your advantage!"
global.hintBoxText6 = "";
global.hintBoxText7 = "";
global.hintBoxText8 = "";
global.hintBoxText9 = "";
global.hintBoxText10 = "";
global.hintBoxText11 = "";
global.hintBoxText12 = "";
global.hintBoxText13 = "";
global.hintBoxText14 = "";
global.hintBoxText15 = "";
global.hintBoxText16 = "";
global.hintBoxText17 = "";
global.hintBoxText18 = "";
global.hintBoxText19 = "";
global.hintBoxText20 = "";

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game complete level config
global.gameCompleteMessage = "Thanks for playing!";
global.gameCompleteFont = fnt_game_complete;
global.gameCompleteFontColor = c_white;
global.gameCompleteMessageX = room_width/2;
global.gameCompleteMessageY = room_height/3;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General gameplay config
global.moveCheckForgiveness = 7; //Number of pixels to ignore on each side for scr_can_move

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player config
//Set default player speeds
global.playerDefaultSpeed = 6; //Player default walking speed in pixels/step
global.playerDefaultClimbSpeed = 5; //Player default ladder climbing speed

//Set animation speeds for various animations
global.playerDefaultImageSpeedIdle = 0.06; //Default player animation speed while standing still
global.playerDefaultImageSpeedWalk = 0.14; //Default player animation speed while walking

///Jumping and falling
//Set jump constants
global.playerJumpTime = 0.4; //Length of player jump in seconds
global.jumpCheckConstant = 1; //Pixels below player to test for object
global.playerDefaultJumpHeight = 75; //Player default jump height, in pixels

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zoom config
global.minViewWidth = 1200; //Should be multiple of 100 for simplicity
global.maxViewWidth = 2400; //Should be multiple of 100 for simplicity
global.zoomPerScroll = 80; //Should be multiple of 4 to maintain 4:3 ratio

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Solid block config
//Speed constants for different block types
global.blockSpeedWood = 1; //Walking speed multiplier wood
global.blockSpeedIce = 1.6; //Walking speed multiplier ice

//Image speed constants for different block types
global.blockImageSpeedWood = 1;
global.blockImageSpeedIce = 1.6;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gravity and falling config
//Set gravity and max fall speed, along with fall speed constant
global.gravity = 1.4;
global.maxFallSpeed = 10; //Maximum player fall speed in pixels per step

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Door config
global.doorFadeColor = c_black; //Color to fade to when transitioning through a doorway
//Door collision check (how close does the center of the player need to be to the center of the door to register?)
global.doorCheckWidth = 32; //Pixels to left/right (total width of box is twice this)
global.doorCheckHeight = 32; //Pixels up/down (total height of box is twice this)

///Need more fish event (when player has not collected all the fish in the level)
global.needMoreFishTimeout = 2; //Time before need more fish message disappears, in seconds

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ladder config
//Ladder collision check (how close does the center of the player need to be to the center of the ladder to register?)
global.ladderCheckWidth = 32; //Pixels to left/right (total width of box is twice this)
global.ladderCheckHeight = 32; //Pixels up/down (total height of box is twice this)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movable block config
/* Number of pixels that a movable block ignores up or down when checking
 * if it should move when other movable block collides with it
 * If this is too low, a movable block on top of another movable block
 * will slide on its own
 */
global.movableBlockSelfCollisionConstant = 5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_master</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Portal config
global.portalImageSpeed = 1/30; //Portal animation speed
global.portalCooldown = 0.1; //Time between portal uses, in seconds
global.portalCheckWidth = 15; //Pixels to left/right (total width of box is twice this)
global.portalCheckHeight = 32; //Pixels up/down (total height of box is twice this)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Effect config
//Fade to next room
global.fadeTime = 2; //Length of fade in seconds
global.fadePerTick = 0.05; //How dark should it get per tick (lower number means smoother fade)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
